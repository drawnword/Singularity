// Grid location is automatically counted unless overridden
$grid-counter: 1;

@mixin grid-span($span, $location: $grid-counter, $columns: $columns, $gutter: $gutter, $padding: $padding) {

  $grouped-styles: false;
  
  @include box-sizing(border-box);


  width: grid-span($span, $location, $columns, $gutter);

  @include grid-structure($span, $location, $columns, $gutter);


  // add special left padding
  @if type-of($columns) == list {
    @if type-of(nth($columns, $location)) == list {
      padding-left: nth(nth($columns, $location), 2);
    }
    @else if $padding != 0 {
      padding-left: $padding;
    }
    // add special right padding
    @if type-of(nth($columns, $location + $span - 1)) == list {
      padding-right: nth(nth($columns, $location + $span - 1), 2);
    }
    @else if $padding != 0 {
      padding-right: $padding;
    }
  }
  @else if $padding != 0 {
    padding: 0 $padding;
  }
  // bump up the counter
  $grid-counter: $location + $span;
  @if $grid-counter > column-count($columns) {
    $grid-counter: 1;
  }
}

// This writes classes, IDs, or silent objects for you to extend or use in your HTML. They can be written to different breakpoints to extend or call into your HTML as needed.
@mixin grid-objects($prefix: a, $columns: $columns, $gutter: $gutter, $padding: $padding, $selector: "%") {
  
  $grouped-styles: true;
  
  // counter keeps track of the starting position
  $count: 0;
  %#{$prefix}column {
    @include grid-structure-shared($span, $location, $columns, $gutter);
    @include grid-padding($padding);
  }
  @for $i from 1 through column-count($columns) {
    @for $n from $count + 1 through column-count($columns) {
      #{$selector}#{$prefix}#{$count}-#{$n} {
        @extend %#{$prefix}column;
        @include grid-structure($span, $location, $columns, $gutter);
      }
    }
    $count: $count + 1;
  }
}

// Add padding to an object on the grid.
@mixin grid-padding($padding) {
  @if $padding != 0 {
    padding: 0 $padding;
  }
}
